name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  docker-multiarch:
    name: Build and push multi-arch Docker image
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.IMAGE_NAME }}:latest

  extract-binaries:
    name: Upload oiq binaries (multi-arch)
    needs: docker-multiarch
    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            runner: ubuntu-latest
          - arch: arm64
            runner: ubuntu-24-04-arm64

    runs-on: ${{ matrix.runner }}
    permissions:
      contents: write

    steps:
      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> "$GITHUB_ENV"

      - name: Pull and extract binary
        run: |
          docker pull --platform linux/${{ matrix.arch }} ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          id=$(docker create --platform linux/${{ matrix.arch }} ${{ env.IMAGE_NAME }}:${{ env.VERSION }})
          docker cp $id:/usr/local/bin/oiq oiq
          docker rm $id

      - name: Create versioned tarball
        run: |
          chmod +x oiq
          tar -czf oiq-linux-${{ matrix.arch }}-${{ env.VERSION }}.tar.gz oiq

      - name: Upload release artifact
        uses: softprops/action-gh-release@v2
        with:
          files: oiq-linux-${{ matrix.arch }}-${{ env.VERSION }}.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
